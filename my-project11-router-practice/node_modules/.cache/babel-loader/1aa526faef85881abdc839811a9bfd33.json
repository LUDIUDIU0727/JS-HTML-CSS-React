{"ast":null,"code":"var _jsxFileName = \"/Users/lulu/Desktop/study/my-project11-router-practice/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Route } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Max',\n  text: 'Learning React is fun!'\n}, {\n  id: 'q2',\n  author: 'Lulu',\n  text: 'Learning React is difficult!'\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO Quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/lulu/Desktop/study/my-project11-router-practice/src/pages/QuoteDetail.js"],"names":["Route","useParams","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,MAApB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CAFiB,CAArB;;AAOA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAAjD,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AAED,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA9B;AAAoC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUG,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApBD;;GAAMJ,W;UACaP,S;;;KADbO,W;AAsBN,eAAeA,WAAf","sourcesContent":["import { Route } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\n\nconst DUMMY_QUOTES = [\n    { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\n    { id: 'q2', author: 'Lulu', text: 'Learning React is difficult!' },\n\n];\n\n\nconst QuoteDetail = () => {\n    const params = useParams();\n    const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n    if (!quote) {\n        return <p>NO Quote found!</p>\n\n    }\n\n    return (\n        <section>\n            <HighlightedQuote text={quote.text} author={quote.author} />\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments />\n            </Route>\n\n        </section>\n\n\n    )\n\n};\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}