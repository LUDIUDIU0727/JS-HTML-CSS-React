{"ast":null,"code":"var _jsxFileName = \"/Users/lulu/Desktop/study/my-project11-router-practice/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    senRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    senRequest(quoteId);\n  }, [senRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO Quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Loaded Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"IbgltaAf+1qbn+Zmbr+xOxHZPaI=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/lulu/Desktop/study/my-project11-router-practice/src/pages/QuoteDetail.js"],"names":["Route","Link","useRouteMatch","useParams","Comments","HighlightedQuote","useHttp","getSingleQuote","useEffect","LoadingSpinner","QuoteDetail","match","params","quoteId","senRequest","status","data","loadedQuote","error","text","author","path","url"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,aAAtB,QAA2C,kBAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAGT,aAAa,EAA3B;AACA,QAAMU,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcD,MAApB;AACA,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,WAA5B;AAAyCC,IAAAA;AAAzC,MAAmDZ,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GAFQ,EAEN,CAACC,UAAD,EAAaD,OAAb,CAFM,CAAT;;AAIA,MAAIE,MAAM,KAAK,SAAf,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAIG,KAAJ,EAAW;AACP,wBACI;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AAED,MAAI,CAACD,WAAW,CAACE,IAAjB,EAAuB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AAED,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEF,WAAW,CAACE,IAApC;AAA0C,MAAA,MAAM,EAAEF,WAAW,CAACG;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAET,KAAK,CAACU,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAlDD;;GAAMX,W;UACYR,a,EACCC,S,EAE0CG,O;;;KAJvDI,W;AAoDN,eAAeA,WAAf","sourcesContent":["import { Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\n\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch();\n    const params = useParams();\n    const { quoteId } = params;\n    const { senRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n\n    useEffect(() => {\n        senRequest(quoteId);\n    }, [senRequest, quoteId])\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <p className='centered'>{error}</p>\n\n        );\n    }\n\n    if (!loadedQuote.text) {\n        return <p>NO Quote found!</p>\n\n    }\n\n    return (\n        <section>\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n            <Route path={match.path} exact>\n                <div className=\"centered\">\n                    <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n                        Loaded Comments\n                    </Link>\n                </div>\n            </Route>\n\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n\n        </section>\n\n\n    )\n\n};\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}