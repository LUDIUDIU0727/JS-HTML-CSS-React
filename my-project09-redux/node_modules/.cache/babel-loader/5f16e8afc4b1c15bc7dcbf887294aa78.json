{"ast":null,"code":"var _jsxFileName = \"/Users/lulu/Desktop/study/my-project09/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { Fragment } from 'react';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'sending...',\n        message: 'sending cart data!'\n      }));\n      const response = await fetch('https://react-htttp-24e60-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('sending cart data failed.');\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success!',\n        message: 'sending cart data successfully!'\n      }));\n    };\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'error!',\n        message: 'sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]); //this effect reexecuted whenever our cart changes\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pFPLrf5KIozIJK4L5TP/t/ZqpQQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lulu/Desktop/study/my-project09/src/App.js"],"names":["Cart","Layout","Products","useSelector","useDispatch","useEffect","uiActions","Fragment","Notification","App","showCart","state","ui","cartIsVisible","cart","dispatch","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA5B;AACA,QAAMC,IAAI,GAAGX,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAxB;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,YAAY,GAAGb,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASI,YAAnB,CAAhC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,YAAY,GAAG,YAAY;AAC/BF,MAAAA,QAAQ,CAACT,SAAS,CAACY,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,YAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,EAAoE;AAC9FC,QAAAA,MAAM,EAAE,KADsF;AAE9FC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAFwF,OAApE,CAA5B;;AAIA,UAAI,CAACQ,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAEDd,MAAAA,QAAQ,CAACT,SAAS,CAACY,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,UAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKD,KAnBD;;AAqBAJ,IAAAA,YAAY,GAAGa,KAAf,CAAqBC,KAAK,IAAI;AAC5BhB,MAAAA,QAAQ,CAACT,SAAS,CAACY,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,OAD0B;AAElCC,QAAAA,KAAK,EAAE,QAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAMD,KAPD;AASD,GA/BQ,EA+BN,CAACP,IAAD,EAAOC,QAAP,CA/BM,CAAT,CALa,CAoCU;;AAEvB,sBACE,QAAC,QAAD;AAAA,eACGC,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,YAAY,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,MAAD;AAAA,iBACGT,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/CQD,G;UACUN,W,EACJA,W,EACIC,W,EACID,W;;;KAJdM,G;AAiDT,eAAeA,GAAf","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { Fragment } from 'react';\nimport Notification from './components/UI/Notification'\nfunction App() {\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'sending...',\n        message: 'sending cart data!',\n      }))\n      const response = await fetch('https://react-htttp-24e60-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart),\n      });\n      if (!response.ok) {\n        throw new Error('sending cart data failed.');\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success!',\n        message: 'sending cart data successfully!',\n      }))\n    };\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'error!',\n        message: 'sending cart data failed!',\n      }))\n\n    })\n\n  }, [cart, dispatch])   //this effect reexecuted whenever our cart changes\n\n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status} />}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}