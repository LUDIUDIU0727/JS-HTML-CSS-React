{"ast":null,"code":"var _jsxFileName = \"/Users/lulu/Desktop/study/my-app07/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const nameInputIsInvalid = enteredNameTouched && !enteredNameIsValid;\n  const enteredEmailIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (nameInputIsInvalid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        onChange: nameChangeHandler,\n        onBlur: nameInputBlurHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), emailInputClasses && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Plese enter a valid Email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"N/gy9exlzawUfXJbUo+845nWhTw=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/lulu/Desktop/study/my-app07/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","enteredEmailIsValid","includes","nameInputIsInvalid","enteredEmailIsInValid","formIsValid","nameChangeHandler","event","target","value","emailChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissonHandler","preventDefault","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const nameInputIsInvalid = enteredNameTouched && !enteredNameIsValid;\n  const enteredEmailIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n\n  const nameChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n  }\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  }\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  }\n\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (nameInputIsInvalid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInValid ? 'form-control invalid' : 'form-control';\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          value={enteredName}\n          onChange={nameChangeHandler}\n          onBlur={nameInputBlurHandler}\n          type='text'\n          id='name'\n        />\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty.</p>}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={emailInputBlurHandler}\n          type='email'\n          id='email'\n        />\n        {emailInputClasses && <p className='error-text'>Plese enter a valid Email.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid} >Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}